// <auto-generated />
using FVCPD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FVCPD.Data.Migrations
{
    [DbContext(typeof(FVCPDbContext))]
    [Migration("20220226192220_Adding Foreign Keys")]
    partial class AddingForeignKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("FVCPD.Data.Models.ConjugatedVerb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conjugation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MoodId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PronounId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TenseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VerbId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MoodId");

                    b.HasIndex("TenseId");

                    b.HasIndex("VerbId");

                    b.HasIndex(new[] { "PronounId", "TenseId", "MoodId", "VerbId" }, "UK_ConjugatedVerb")
                        .IsUnique();

                    b.ToTable("ConjugatedVerbs");
                });

            modelBuilder.Entity("FVCPD.Data.Models.Mood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UK_Mood_Name")
                        .IsUnique();

                    b.ToTable("Moods");
                });

            modelBuilder.Entity("FVCPD.Data.Models.Pronoun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UK_Pronoun_Name")
                        .IsUnique();

                    b.ToTable("Pronouns");
                });

            modelBuilder.Entity("FVCPD.Data.Models.Tense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UK_Tense_Name")
                        .IsUnique();

                    b.ToTable("Tenses");
                });

            modelBuilder.Entity("FVCPD.Data.Models.Verb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Infinitive")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PastParticiple")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Infinitive" }, "UK_Verb_Infinitive")
                        .IsUnique();

                    b.ToTable("Verbs");
                });

            modelBuilder.Entity("FVCPD.Data.Models.ConjugatedVerb", b =>
                {
                    b.HasOne("FVCPD.Data.Models.Mood", "Mood")
                        .WithMany("ConjugatedVerbs")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FVCPD.Data.Models.Pronoun", "Pronoun")
                        .WithMany("ConjugatedVerbs")
                        .HasForeignKey("PronounId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FVCPD.Data.Models.Tense", "Tense")
                        .WithMany("ConjugatedVerbs")
                        .HasForeignKey("TenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FVCPD.Data.Models.Verb", "Verb")
                        .WithMany("ConjugatedVerbs")
                        .HasForeignKey("VerbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Pronoun");

                    b.Navigation("Tense");

                    b.Navigation("Verb");
                });

            modelBuilder.Entity("FVCPD.Data.Models.Mood", b =>
                {
                    b.Navigation("ConjugatedVerbs");
                });

            modelBuilder.Entity("FVCPD.Data.Models.Pronoun", b =>
                {
                    b.Navigation("ConjugatedVerbs");
                });

            modelBuilder.Entity("FVCPD.Data.Models.Tense", b =>
                {
                    b.Navigation("ConjugatedVerbs");
                });

            modelBuilder.Entity("FVCPD.Data.Models.Verb", b =>
                {
                    b.Navigation("ConjugatedVerbs");
                });
#pragma warning restore 612, 618
        }
    }
}
